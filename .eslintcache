[{"/Users/xenia/Desktop/ITK-tests/monday-test/src/App.tsx":"1","/Users/xenia/Desktop/ITK-tests/monday-test/src/index.tsx":"2","/Users/xenia/Desktop/ITK-tests/monday-test/src/counter/Counter.tsx":"3","/Users/xenia/Desktop/ITK-tests/monday-test/src/reportWebVitals.ts":"4","/Users/xenia/Desktop/ITK-tests/monday-test/src/counter/Button.tsx":"5","/Users/xenia/Desktop/ITK-tests/monday-test/src/settings/Settings.tsx":"6"},{"size":1193,"mtime":1609366338594,"results":"7","hashOfConfig":"8"},{"size":500,"mtime":1607079990419,"results":"9","hashOfConfig":"8"},{"size":1647,"mtime":1609340996184,"results":"10","hashOfConfig":"8"},{"size":425,"mtime":1607079990422,"results":"11","hashOfConfig":"8"},{"size":480,"mtime":1609340927895,"results":"12","hashOfConfig":"8"},{"size":1747,"mtime":1609366860614,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"130a34n",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xenia/Desktop/ITK-tests/monday-test/src/App.tsx",[],"/Users/xenia/Desktop/ITK-tests/monday-test/src/index.tsx",[],["29","30"],"/Users/xenia/Desktop/ITK-tests/monday-test/src/counter/Counter.tsx",["31","32"],"import React from 'react';\n// import './Counter.css'\nimport styles from './Counter.module.css'\nimport Button from \"./Button\";\n\ntype CounterPropsType = {\n    number: number\n    maxNumber: number\n    increaseNumber: () => void\n    resetNumber: () => void\n}\n\nfunction Counter(props: CounterPropsType) {\n    const incIsDisabled = () => {\n        return props.number > props.maxNumber ? true : false\n    }\n    const resetIsDisabled = () => {\n        return props.number === 0 ? true : false\n    }\n\n    const onIncreaseHandler = props.increaseNumber;\n    const onResetHandler = props.resetNumber;\n\n    const incClass = props.number > props.maxNumber ? `${styles.btn} ${styles.btnInc} ${styles.disabledBtn}` : `${styles.btn} ${styles.btnInc}`;\n    const resetClass = props.number === 0 ? `${styles.btn} ${styles.btnReset} ${styles.disabledBtn}` : `${styles.btn} ${styles.btnReset}`;\n\n\n    return <div className={styles.container}>\n        <div className={styles.display}>\n            <span\n                className={props.number <= props.maxNumber ? styles.count : `${styles.count} ${styles.maxCount}`}>\n                {props.number}\n            </span>\n        </div>\n        <div className={styles.buttons}>\n            <Button\n                name={'add one'}\n                onClick={props.increaseNumber}\n                className={incClass}\n                disabled={incIsDisabled()}\n            />\n            <Button\n                name={'reset'}\n                onClick={props.resetNumber}\n                className={resetClass}\n                disabled={resetIsDisabled()}\n            />\n        </div>\n    </div>\n}\n\nexport default Counter;\n",["33","34"],"/Users/xenia/Desktop/ITK-tests/monday-test/src/reportWebVitals.ts",[],"/Users/xenia/Desktop/ITK-tests/monday-test/src/counter/Button.tsx",["35"],"/Users/xenia/Desktop/ITK-tests/monday-test/src/settings/Settings.tsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":21,"column":11,"nodeType":"42","messageId":"43","endLine":21,"endColumn":28},{"ruleId":"40","severity":1,"message":"44","line":22,"column":11,"nodeType":"42","messageId":"43","endLine":22,"endColumn":25},{"ruleId":"36","replacedBy":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","severity":1,"message":"47","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":14},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"@typescript-eslint/no-unused-vars","'onIncreaseHandler' is assigned a value but never used.","Identifier","unusedVar","'onResetHandler' is assigned a value but never used.",["48"],["49"],"'styles' is defined but never used.","no-global-assign","no-unsafe-negation"]